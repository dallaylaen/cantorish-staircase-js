!function(){"use strict";class t{constructor(){this._boxes=[[0,0]],this._min=0,this._max=0}width(){const t=this._boxes;return t[t.length-1][0]}height(){return this._max-this._min}add(t){const s=this._boxes;let h=s[s.length-1][0],i=s[s.length-1][1];for(const[n,e]of t)h+=n,i+=e,s.push([h,i]),i<this._min&&(this._min=i),i>this._max&&(this._max=i);return this}compose(s){const h=new t,i=s.fetch();for(const[t,n]of this.fetch())0!==n?h.add(i.map(s=>[s[0]*t,s[1]*n])):h.add([[s.width()*t,0]]);return h}fetch(){const t=this._boxes;if(!t.length)return[];const s=[];for(let h=1;h<t.length;h++)s.push([t[h][0]-t[h-1][0],t[h][1]-t[h-1][1]]);return s}graph(t,s){const h=this.width()/(t-1),i=this._min,n=s/this.height(),e=this._boxes,r=Array(t);for(let o=0,c=1;o<t;o++){for(;c<e.length-1&&e[c][0]<o*h;)c++;const t=(e[c][1]+e[c-1][1])/2;r[o]=(t-i)*n}return r}}var s={Staircase:t};const{Staircase:h}=s;window.Staircase=h}();